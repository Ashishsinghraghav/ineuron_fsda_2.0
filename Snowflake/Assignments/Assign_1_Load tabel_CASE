USE WAREHOUSE DEMO_WAREHOUSE;

USE DATABASE DEMO_DATABASE;

------1. Load table and create Primary Key

CREATE OR REPLACE TABLE ASR_SALES_DATA
(order_id VARCHAR(50),
 order_date	string,
 ship_date string,
 ship_mode CHAR(20),
 customer_name VARCHAR(30),
 segment CHAR(15),
 state VARCHAR(150),
 country VARCHAR(35),
 market CHAR(10),
 region CHAR(20),
 product_id	CHAR(50),
 category CHAR(18),
 sub_category CHAR(20),
 product_name VARCHAR(200),
 sales number(6,0),
 quantity INT,
 discount float,
 profit float,
 shipping_cost float,
 order_priority CHAR(10) NOT NULL PRIMARY KEY,
 year CHAR(5)
 );
 
DESCRIBE TABLE ASR_SALES_DATA;
 
SELECT * FROM  ASR_SALES_DATA;

--------2. Change the Primary key to Order Id Column.
ALTER TABLE ASR_SALES_DATA
DROP PRIMARY KEY;

ALTER TABLE ASR_SALES_DATA
ADD PRIMARY KEY(ORDER_ID);

--------3.CHECK THE ORDER DATE AND SHIP DATE TYPE AND THINK IN WHICH DATA TYPE YOU HAVE TO CHANGE.
Update ASR_SALES_DATA
SET ORDER_DATE=CAST(ORDER_DATE AS DATE);

Update ASR_SALES_DATA
SET SHIP_DATE=CAST(SHIP_DATE AS DATE);

-------4. Create a new column called order_extract and extract the number after the last ‘–‘from Order ID column..

CREATE OR REPLACE TABLE ASR_SALES_DATA AS
SELECT*, REGEXP_SUBSTR(ORDER_ID,'[[:digit:]]+',1,2) AS ORDER_EXTRACT
from ASR_SALES_DATA;

--------5.Create a new column called Discount Flag and categorize it based on discount. Use ‘Yes’ if the discount is greater than zero else ‘No'.
CREATE OR REPLACE TABLE ASR_SALES_DATA AS
SELECT *,
      CASE
        WHEN DISCOUNT>0 THEN 'Yes'
        ELSE 'NO'
      END AS DISCOUNT_FLAG
FROM ASR_SALES_DATA;

-------6. Create a new column called process days and calculate how many days it takes for each order id to process from the order to its shipment.

CREATE OR REPLACE TABLE ASR_SALES_DATA AS
SELECT*,
DATEDIFF('days',ORDER_DATE,SHIP_DATE) as PROCESS_DAYS
FROM ASR_SALES_DATA;

-------7. FLAG THE PROCESS DAY AS BY RATING IF IT TAKES LESS OR EQUAL 3  DAYS MAKE 5,LESS OR EQUAL THAN 6 DAYS BUT MORE THAN 3 MAKE 4,LESS THAN 10 BUT MORE THAN 6 MAKE 3,MORE THAN 10 MAKE IT 2 FOR EVERY ORDER ID

CREATE OR REPLACE TABLE ASR_SALES_DATA AS
SELECT*, 
    CASE
       WHEN PROCESS_DAYS <=3 THEN 5
       WHEN PROCESS_DAYS BETWEEN 4 AND 6 THEN 4
       WHEN PROCESS_DAYS BETWEEN 7 AND 10 THEN 3
       ELSE 2
     END AS RATING
FROM ASR_SALES_DATA;
